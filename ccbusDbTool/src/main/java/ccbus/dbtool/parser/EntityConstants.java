/* Generated By:JavaCC: Do not edit this line. EntityConstants.java */
package ccbus.dbtool.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface EntityConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 8;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 9;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 10;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 12;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 13;
  /** RegularExpression Id. */
  int HEX_LITERAL = 14;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 15;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 16;
  /** RegularExpression Id. */
  int EXPONENT = 17;
  /** RegularExpression Id. */
  int CHARACTER_LITERAL = 18;
  /** RegularExpression Id. */
  int STRING_LITERAL = 19;
  /** RegularExpression Id. */
  int STATIC = 20;
  /** RegularExpression Id. */
  int FIELD_ACCESS = 21;
  /** RegularExpression Id. */
  int CLASS_IDENTIFIER = 22;
  /** RegularExpression Id. */
  int IMPORT = 23;
  /** RegularExpression Id. */
  int EXTENDS = 24;
  /** RegularExpression Id. */
  int PACKAGE = 25;
  /** RegularExpression Id. */
  int HEADER = 26;
  /** RegularExpression Id. */
  int TRUE = 27;
  /** RegularExpression Id. */
  int FALSE = 28;
  /** RegularExpression Id. */
  int NULL = 29;
  /** RegularExpression Id. */
  int AT = 30;
  /** RegularExpression Id. */
  int LEFT_BRACE = 31;
  /** RegularExpression Id. */
  int RIGHT_BRACE = 32;
  /** RegularExpression Id. */
  int LEFT_PAREN = 33;
  /** RegularExpression Id. */
  int RIGHT_PAREN = 34;
  /** RegularExpression Id. */
  int LEFT_BRACKET = 35;
  /** RegularExpression Id. */
  int RIGHT_BRACKET = 36;
  /** RegularExpression Id. */
  int SEMICOLON = 37;
  /** RegularExpression Id. */
  int EQUALS = 38;
  /** RegularExpression Id. */
  int LESS_THAN = 39;
  /** RegularExpression Id. */
  int GREATER_THAN = 40;
  /** RegularExpression Id. */
  int DOT = 41;
  /** RegularExpression Id. */
  int COMMA = 42;
  /** RegularExpression Id. */
  int IDENTIFIER = 43;
  /** RegularExpression Id. */
  int UNEXPECTED = 44;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_FORMAL_COMMENT = 2;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"//\"",
    "<token of kind 6>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 11>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "\"static\"",
    "<FIELD_ACCESS>",
    "<CLASS_IDENTIFIER>",
    "\"import\"",
    "\"extends\"",
    "\"package\"",
    "<HEADER>",
    "\"true\"",
    "\"false\"",
    "\"null\"",
    "\"@\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\"=\"",
    "\"<\"",
    "\">\"",
    "\".\"",
    "\",\"",
    "<IDENTIFIER>",
    "<UNEXPECTED>",
  };

}
